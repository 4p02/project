create table public.users (
    id bigint generated by default as identity primary key unique not null,
    created_at timestamp with time zone null default now(),
    email text unique not null,
    password text not null,
);

alter table public.users enable row level security;


create table public.webpage (
    id bigint generated by default as identity primary key unique not null,
    created_at timestamp with time zone null default now(),
    source_url text not null,
    body bytea not null,
    summary bytea,
);

create table public.videos (
    id bigint generated by default as identity primary key unique not null,
    created_at timestamp with time zone null default now(),
    source_url text not null,
    transcript bytea not null,
    summary bytea,
);


create table public.documents (
    id bigint generated by default as identity primary key unique not null,
    created_at timestamp with time zone null default now(),
    filename text not null,
    body bytea not null,
    summary bytea,
);


create type public.article_type as enum('article', 'video', 'document');


create table public.articles (
    id bigint generated by default as identity primary key unique not null,
    owner bigint not null references public.users(id);
    type article_type not null,
    history bigint[] not null,
    private boolean not null,
    -- todo: figure out how the *fuck* to setup fk constraints on this shit???
    -- constraint articles_fk
)

create table public.links (
    id bigint generated by default as identity primary key unique not null, 
    -- should given_link be unique (such as there can only be one link per shortened link)
    -- for now I am going to say no but 4 later
    given_link text not not null
    shortened_link text not null
);


-- todo: setup rls
-- todo: setup rls per column
